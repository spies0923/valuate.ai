version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: valuate-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-changeme}
      MONGO_INITDB_DATABASE: valuate
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - valuate-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: valuate-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 8080
      DB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-changeme}@mongodb:27017/valuate?authSource=admin
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "${SERVER_PORT:-8080}:8080"
    volumes:
      - server_logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - valuate-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: valuate-client
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL:-http://localhost:8080}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      UPLOADTHING_SECRET: ${UPLOADTHING_SECRET}
      UPLOADTHING_APP_ID: ${UPLOADTHING_APP_ID}
    ports:
      - "${CLIENT_PORT:-3000}:3000"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - valuate-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  server_logs:
    driver: local

networks:
  valuate-network:
    driver: bridge
